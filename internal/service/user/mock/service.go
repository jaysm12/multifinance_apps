// Code generated by MockGen. DO NOT EDIT.
// Source: internal/service/user/service.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	user "github.com/jaysm12/multifinance-apps/internal/service/user"
)

// MockUserServiceMethod is a mock of UserServiceMethod interface.
type MockUserServiceMethod struct {
	ctrl     *gomock.Controller
	recorder *MockUserServiceMethodMockRecorder
}

// MockUserServiceMethodMockRecorder is the mock recorder for MockUserServiceMethod.
type MockUserServiceMethodMockRecorder struct {
	mock *MockUserServiceMethod
}

// NewMockUserServiceMethod creates a new mock instance.
func NewMockUserServiceMethod(ctrl *gomock.Controller) *MockUserServiceMethod {
	mock := &MockUserServiceMethod{ctrl: ctrl}
	mock.recorder = &MockUserServiceMethodMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserServiceMethod) EXPECT() *MockUserServiceMethodMockRecorder {
	return m.recorder
}

// CreateUserKyc mocks base method.
func (m *MockUserServiceMethod) CreateUserKyc(request user.CreateUserKycRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserKyc", request)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUserKyc indicates an expected call of CreateUserKyc.
func (mr *MockUserServiceMethodMockRecorder) CreateUserKyc(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserKyc", reflect.TypeOf((*MockUserServiceMethod)(nil).CreateUserKyc), request)
}

// GetUserByID mocks base method.
func (m *MockUserServiceMethod) GetUserByID(arg0 user.GetByIDServiceRequest) (user.UserServiceInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserByID", arg0)
	ret0, _ := ret[0].(user.UserServiceInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserByID indicates an expected call of GetUserByID.
func (mr *MockUserServiceMethodMockRecorder) GetUserByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserByID", reflect.TypeOf((*MockUserServiceMethod)(nil).GetUserByID), arg0)
}
