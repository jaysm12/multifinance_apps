// Code generated by MockGen. DO NOT EDIT.
// Source: internal/store/installment_payment_history/store.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/jaysm12/multifinance-apps/models"
)

// MockInstallmentPaymentHistoryStoreMethod is a mock of InstallmentPaymentHistoryStoreMethod interface.
type MockInstallmentPaymentHistoryStoreMethod struct {
	ctrl     *gomock.Controller
	recorder *MockInstallmentPaymentHistoryStoreMethodMockRecorder
}

// MockInstallmentPaymentHistoryStoreMethodMockRecorder is the mock recorder for MockInstallmentPaymentHistoryStoreMethod.
type MockInstallmentPaymentHistoryStoreMethodMockRecorder struct {
	mock *MockInstallmentPaymentHistoryStoreMethod
}

// NewMockInstallmentPaymentHistoryStoreMethod creates a new mock instance.
func NewMockInstallmentPaymentHistoryStoreMethod(ctrl *gomock.Controller) *MockInstallmentPaymentHistoryStoreMethod {
	mock := &MockInstallmentPaymentHistoryStoreMethod{ctrl: ctrl}
	mock.recorder = &MockInstallmentPaymentHistoryStoreMethodMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInstallmentPaymentHistoryStoreMethod) EXPECT() *MockInstallmentPaymentHistoryStoreMethodMockRecorder {
	return m.recorder
}

// CreateInstallmentPaymentHistory mocks base method.
func (m *MockInstallmentPaymentHistoryStoreMethod) CreateInstallmentPaymentHistory(installmentPaymentHistoryinfo models.InstallmentPaymentHistory) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInstallmentPaymentHistory", installmentPaymentHistoryinfo)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateInstallmentPaymentHistory indicates an expected call of CreateInstallmentPaymentHistory.
func (mr *MockInstallmentPaymentHistoryStoreMethodMockRecorder) CreateInstallmentPaymentHistory(installmentPaymentHistoryinfo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInstallmentPaymentHistory", reflect.TypeOf((*MockInstallmentPaymentHistoryStoreMethod)(nil).CreateInstallmentPaymentHistory), installmentPaymentHistoryinfo)
}

// GetInstallmentPaymentHistoryInfoByID mocks base method.
func (m *MockInstallmentPaymentHistoryStoreMethod) GetInstallmentPaymentHistoryInfoByID(installmentPaymentHistoryid int) (models.InstallmentPaymentHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstallmentPaymentHistoryInfoByID", installmentPaymentHistoryid)
	ret0, _ := ret[0].(models.InstallmentPaymentHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInstallmentPaymentHistoryInfoByID indicates an expected call of GetInstallmentPaymentHistoryInfoByID.
func (mr *MockInstallmentPaymentHistoryStoreMethodMockRecorder) GetInstallmentPaymentHistoryInfoByID(installmentPaymentHistoryid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstallmentPaymentHistoryInfoByID", reflect.TypeOf((*MockInstallmentPaymentHistoryStoreMethod)(nil).GetInstallmentPaymentHistoryInfoByID), installmentPaymentHistoryid)
}

// GetLatestHistoryByInstallmentId mocks base method.
func (m *MockInstallmentPaymentHistoryStoreMethod) GetLatestHistoryByInstallmentId(installmentID uint) (models.InstallmentPaymentHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestHistoryByInstallmentId", installmentID)
	ret0, _ := ret[0].(models.InstallmentPaymentHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestHistoryByInstallmentId indicates an expected call of GetLatestHistoryByInstallmentId.
func (mr *MockInstallmentPaymentHistoryStoreMethodMockRecorder) GetLatestHistoryByInstallmentId(installmentID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestHistoryByInstallmentId", reflect.TypeOf((*MockInstallmentPaymentHistoryStoreMethod)(nil).GetLatestHistoryByInstallmentId), installmentID)
}
